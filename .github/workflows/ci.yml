name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  install-deps:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.npm-cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Cache node_modules
        id: npm-cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

  code-quality:
    needs: install-deps
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Run Prettier Check
        run: npm run prettier

      - name: Run Eslint Check
        run: npm run lint

  unit-tests:
    needs: install-deps
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Unit Tests
        run: npm run unit-tests

  e2e-tests:
    needs: install-deps
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Start Containers
        run: docker compose -f compose.test.yml up -d

      - name: Apply fixtures
        run: npx tsx apply-fixtures.ts

      - name: Build test instance
        run: APP_ENV=test npm run build

      - name: Copy static assets
        run: cp -r .next/static .next/standalone/.next/

      - name: Copy public assets
        run: cp -r public .next/standalone/

      - name: Start test instance
        run: APP_ENV=test HOSTNAME='0.0.0.0' node .next/standalone/server.js &

      - name: Run end-to-end tests
        run: npx playwright test